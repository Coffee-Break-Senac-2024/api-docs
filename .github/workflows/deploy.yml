name: "Build and deploy on EC2 Docs API"

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Set environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> $GITHUB_ENV
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> $GITHUB_ENV
          echo "S3_ACCESSKEY=${{ secrets.S3_ACCESSKEY }}" >> $GITHUB_ENV
          echo "S3_SECRETACCESSKEY=${{ secrets.S3_SECRETACCESSKEY }}" >> $GITHUB_ENV
          echo "APPLICATION_BUCKET_NAME=${{ secrets.APPLICATION_BUCKET_NAME }}" >> $GITHUB_ENV
          echo "SIGNATURE_SERVICE_URL=${{ secrets.SIGNATURE_SERVICE_URL }}" >> $GITHUB_ENV

      - name: Build with maven
        run: mvn clean install

      - name: Login docker
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Set environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> $GITHUB_ENV
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> $GITHUB_ENV
          echo "S3_ACCESSKEY=${{ secrets.S3_ACCESSKEY }}" >> $GITHUB_ENV
          echo "S3_SECRETACCESSKEY=${{ secrets.S3_SECRETACCESSKEY }}" >> $GITHUB_ENV
          echo "APPLICATION_BUCKET_NAME=${{ secrets.APPLICATION_BUCKET_NAME }}" >> $GITHUB_ENV
          echo "SIGNATURE_SERVICE_URL=${{ secrets.SIGNATURE_SERVICE_URL }}" >> $GITHUB_ENV

      - name: Docker build
        run: docker build -t bielxrd/docs-api:latest .

      - name: Docker push
        run: docker push bielxrd/docs-api:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create SSH KEY FILE
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} <<- EOF
            docker pull bielxrd/docs-api:latest &&
            docker stop docs-api || true &&
            docker rm docs-api || true &&
            docker run  --name docsapi -d -p 8082:8082 \
              -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
              -e DATABASE_USER="${{ secrets.DATABASE_USER }}" \
              -e DATABASE_PASSWORD="${{ secrets.DATABASE_PASSWORD }}" \
              -e S3_ACCESSKEY="${{ secrets.S3_ACCESSKEY }}" \
              -e S3_SECRETACCESSKEY="${{ secrets.S3_SECRETACCESSKEY }}" \
              -e APPLICATION_BUCKET_NAME="${{ secrets.APPLICATION_BUCKET_NAME }}" \
              -e SIGNATURE_SERVICE_URL="${{ secrets.SIGNATURE_SERVICE_URL }}" \
               bielxrd/docsapi:latest
          EOF